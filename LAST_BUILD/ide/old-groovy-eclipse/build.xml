<?xml version="1.0" encoding="UTF-8"?>
<project name="org.codehaus.groovy.eclipse.ui" default="rebuild" basedir=".">

	<target name="rebuild" depends="clean, zip.plugin"/>
	
	<property name="bootclasspath" value=""/>
	<property name="ws" value="win32"/>
	<property name="os" value="win32"/>
	<property name="arch" value="x86"/>
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>

	<target name="init" depends="properties">
		<property name="plugin" value="org.codehaus.groovy.eclipse.ui"/>
		<property name="version.suffix" value="_1.0.0"/>
		<property name="full.name" value="${plugin}${version.suffix}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
		<property name="build.result.folder" value="${basedir}"/>
	</target>

	<target name="plugin" depends="clean, groovy-eclipsesrc.zip, build.jars, zip.plugin, build.zips, build.update.jar"/>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: org.codehaus.groovy.eclipse.ui for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip zipfile="${plugin.destination}/${full.name}.jar" basedir="${temp.folder}/${full.name}" filesonly="false" update="no"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<mkdir dir="${destination.temp.folder}/${full.name}/lib"/>
		<copy file="${build.result.folder}/groovy-eclipse.jar" todir="${destination.temp.folder}/${full.name}"/>
		<copy todir="${destination.temp.folder}/${full.name}">
			<fileset dir="${basedir}" includes="plugin.xml,*.jar,groovy-eclipse.jar"/>
		</copy>
		<copy todir="${destination.temp.folder}/${full.name}/lib">
			<fileset dir="${basedir}/lib" includes="*.jar"/>
		</copy>
	</target>

	<target name="groovy-eclipse.jar" depends="init" unless="groovy-eclipse.jar" description="Create jar: groovy-eclipse.jar.">
		<property name="destdir" value="${temp.folder}/groovy-eclipse.jar.bin"/>
		<delete dir="${temp.folder}/groovy-eclipse.jar.bin"/>
		<mkdir dir="${temp.folder}/groovy-eclipse.jar.bin"/>
		
		<echo>Using eclipse home directory ${eclipse.home}</echo>
		
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/groovy-eclipse.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" >
			<src path="src/"/>
			<classpath>
				<fileset dir="lib" casesensitive="yes">
				  <include name="**/*.jar"/>
				</fileset>
				<fileset dir="${eclipse.home}/plugins" casesensitive="yes">
				  <include name="**/*.jar"/>
				  <exclude name="**/*groovy*"/>
				</fileset>
			</classpath>
		</javac>
		
		<!-- copy necessary resources -->
		<copy todir="${temp.folder}/groovy-eclipse.jar.bin">
			<fileset dir="src/" excludes="**/*.java"/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar jarfile="${build.result.folder}/groovy-eclipse.jar" basedir="${temp.folder}/groovy-eclipse.jar.bin"/>
		<delete dir="${temp.folder}/groovy-eclipse.jar.bin"/>
	</target>

	<target name="groovy-eclipsesrc.zip" depends="init" unless="groovy-eclipse.jar">
		<mkdir dir="${build.result.folder}"/>
		<zip zipfile="${build.result.folder}/groovy-eclipsesrc.zip" filesonly="false" update="no">
			<fileset dir="src/" includes="**/*.java"/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.codehaus.groovy.eclipse.ui.">
		<available property="groovy-eclipse.jar" file="${build.result.folder}/groovy-eclipse.jar"/>
		<antcall target="groovy-eclipse.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="groovy-eclipsesrc.zip" file="${build.result.folder}/groovy-eclipsesrc.zip"/>
		<antcall target="groovy-eclipsesrc.zip"/>
	</target>

		<target name="build.zips" depends="init">
		</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${build.result.folder}/groovy-eclipsesrc.zip" todir="${destination.temp.folder}/${full.name}"/>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/${full.name}"/>
		<copy file="${temp.folder}/groovy-eclipse.jar.bin.log" todir="${destination.temp.folder}/${full.name}"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: org.codehaus.groovy.eclipse.ui of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/groovy-eclipse.jar"/>
		<delete file="${build.result.folder}/groovy-eclipsesrc.zip"/>
		<delete file="${plugin.destination}/${full.name}.jar"/>
		<delete file="${plugin.destination}/${full.name}.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running">
		<eclipse.convertPath fileSystemPath="c:\dev\groovy-eclipse\" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.codehaus.groovy.eclipse.ui.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"/>
		</delete>
		<antcall target="zip.folder"/>
		<delete dir="${temp.folder}"/>
	</target>
	<target name="zip.folder" depends="init">
		<zip zipfile="${plugin.destination}/${full.name}.zip" basedir="${temp.folder}" filesonly="true" update="no" excludes="**/*.bin.log"/>
	</target>

</project>
