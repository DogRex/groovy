// $ANTLR 2.7.2: groovy.g -> GroovyTokenTypes.txt$
Groovy    // output token vocab name
BLOCK=4
MODIFIERS=5
OBJBLOCK=6
SLIST=7
METHOD_DEF=8
VARIABLE_DEF=9
INSTANCE_INIT=10
STATIC_INIT=11
TYPE=12
CLASS_DEF=13
INTERFACE_DEF=14
PACKAGE_DEF=15
ARRAY_DECLARATOR=16
EXTENDS_CLAUSE=17
IMPLEMENTS_CLAUSE=18
PARAMETERS=19
PARAMETER_DEF=20
LABELED_STAT=21
TYPECAST=22
INDEX_OP=23
POST_INC=24
POST_DEC=25
METHOD_CALL=26
EXPR=27
IMPORT=28
UNARY_MINUS=29
UNARY_PLUS=30
CASE_GROUP=31
ELIST=32
FOR_INIT=33
FOR_CONDITION=34
FOR_ITERATOR=35
EMPTY_STAT=36
FINAL="final"=37
ABSTRACT="abstract"=38
UNUSED_GOTO="goto"=39
UNUSED_CONST="const"=40
UNUSED_DO="do"=41
STRICTFP="strictfp"=42
SUPER_CTOR_CALL=43
CTOR_CALL=44
CTOR_IDENT=45
VARIABLE_PARAMETER_DEF=46
STRING_CONSTRUCTOR=47
STRING_CTOR_MIDDLE=48
CLOSED_BLOCK=49
IMPLICIT_PARAMETERS=50
SELECT_SLOT=51
DYNAMIC_MEMBER=52
LABELED_ARG=53
SPREAD_ARG=54
SPREAD_MAP_ARG=55
SCOPE_ESCAPE=56
LIST_CONSTRUCTOR=57
MAP_CONSTRUCTOR=58
FOR_IN_ITERABLE=59
STATIC_IMPORT=60
ENUM_DEF=61
ENUM_CONSTANT_DEF=62
FOR_EACH_CLAUSE=63
ANNOTATION_DEF=64
ANNOTATIONS=65
ANNOTATION=66
ANNOTATION_MEMBER_VALUE_PAIR=67
ANNOTATION_FIELD_DEF=68
ANNOTATION_ARRAY_INIT=69
TYPE_ARGUMENTS=70
TYPE_ARGUMENT=71
TYPE_PARAMETERS=72
TYPE_PARAMETER=73
WILDCARD_TYPE=74
TYPE_UPPER_BOUNDS=75
TYPE_LOWER_BOUNDS=76
SH_COMMENT("a script header")=77
LITERAL_package="package"=78
LITERAL_import="import"=79
LITERAL_static="static"=80
LITERAL_def="def"=81
AT("'@'")=82
IDENT("an identifier")=83
LBRACK("'['")=84
RBRACK("']'")=85
DOT("'.'")=86
LPAREN("'('")=87
LITERAL_class="class"=88
LITERAL_interface="interface"=89
LITERAL_enum="enum"=90
QUESTION("'?'")=91
LITERAL_extends="extends"=92
LITERAL_super="super"=93
LT("'<'")=94
COMMA("','")=95
GT("'>'")=96
SR("'>>'")=97
BSR("'>>>'")=98
LITERAL_void="void"=99
LITERAL_boolean="boolean"=100
LITERAL_byte="byte"=101
LITERAL_char="char"=102
LITERAL_short="short"=103
LITERAL_int="int"=104
LITERAL_float="float"=105
LITERAL_long="long"=106
LITERAL_double="double"=107
LITERAL_any="any"=108
STAR("'*'")=109
LITERAL_as="as"=110
LITERAL_private="private"=111
LITERAL_public="public"=112
LITERAL_protected="protected"=113
LITERAL_transient="transient"=114
LITERAL_native="native"=115
LITERAL_threadsafe="threadsafe"=116
LITERAL_synchronized="synchronized"=117
LITERAL_volatile="volatile"=118
RPAREN("')'")=119
ASSIGN("'='")=120
BAND("'&'")=121
LCURLY("'{'")=122
RCURLY("'}'")=123
SEMI("';'")=124
NLS("some newlines, whitespace or comments")=125
LITERAL_default="default"=126
LITERAL_implements="implements"=127
LITERAL_this="this"=128
STRING_LITERAL("a string literal")=129
LITERAL_throws="throws"=130
TRIPLE_DOT("'...'")=131
CLOSURE_OP("'->'")=132
LOR("'||'")=133
BOR("'|'")=134
COLON("':'")=135
LITERAL_if="if"=136
LITERAL_else="else"=137
LITERAL_while="while"=138
LITERAL_with="with"=139
LITERAL_switch="switch"=140
LITERAL_for="for"=141
LITERAL_in="in"=142
LITERAL_return="return"=143
LITERAL_break="break"=144
LITERAL_continue="continue"=145
LITERAL_throw="throw"=146
LITERAL_assert="assert"=147
PLUS("'+'")=148
MINUS("'-'")=149
LITERAL_case="case"=150
LITERAL_try="try"=151
LITERAL_finally="finally"=152
LITERAL_catch="catch"=153
SPREAD_DOT("'*.'")=154
OPTIONAL_DOT("'?.'")=155
MEMBER_POINTER("'.&'")=156
PLUS_ASSIGN("'+='")=157
MINUS_ASSIGN("'-='")=158
STAR_ASSIGN("'*='")=159
DIV_ASSIGN("'/='")=160
MOD_ASSIGN("'%='")=161
SR_ASSIGN("'>>='")=162
BSR_ASSIGN("'>>>='")=163
SL_ASSIGN("'<<='")=164
BAND_ASSIGN("'&='")=165
BXOR_ASSIGN("'^='")=166
BOR_ASSIGN("'|='")=167
STAR_STAR_ASSIGN("'**='")=168
LAND("'&&'")=169
BXOR("'^'")=170
REGEX_FIND("'=~'")=171
REGEX_MATCH("'==~'")=172
NOT_EQUAL("'!='")=173
EQUAL("'=='")=174
COMPARE_TO("'<=>'")=175
LE("'<='")=176
GE("'>='")=177
LITERAL_instanceof="instanceof"=178
SL("'<<'")=179
RANGE_INCLUSIVE("'..'")=180
RANGE_EXCLUSIVE("'..<'")=181
INC("'++'")=182
DIV("'/'")=183
MOD("'%'")=184
DEC("'--'")=185
STAR_STAR("'**'")=186
BNOT("'~'")=187
LNOT("'!'")=188
DOLLAR("'$'")=189
STRING_CTOR_START=190
STRING_CTOR_END("a string literal end")=191
LITERAL_new="new"=192
LITERAL_true="true"=193
LITERAL_false="false"=194
LITERAL_null="null"=195
NUM_INT("a numeric literal")=196
NUM_FLOAT=197
NUM_LONG=198
NUM_DOUBLE=199
NUM_BIG_INT=200
NUM_BIG_DECIMAL=201
WS("whitespace")=202
ONE_NL("a newline")=203
SL_COMMENT("a single line comment")=204
ML_COMMENT("a comment")=205
STRING_CH("a string character")=206
REGEXP_LITERAL("a regular expression literal")=207
REGEXP_CTOR_END("a regular expression literal end")=208
REGEXP_SYMBOL("a regular expression character")=209
ESC("an escape sequence")=210
STRING_NL("a newline inside a string")=211
HEX_DIGIT("a hexadecimal digit")=212
VOCAB("a character")=213
LETTER("a letter")=214
DIGIT("a digit")=215
EXPONENT("an exponent")=216
FLOAT_SUFFIX("a float or double suffix")=217
BIG_SUFFIX("a big decimal suffix")=218
