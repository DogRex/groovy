<?xml version="1.0" encoding="UTF-8"?>

<!--

Gant: A Groovy build tool based on scripting Ant tasks

Copyright (C) 2006 Russel Winder

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing permissions and limitations under the
License.

Author : Russel Winder
$Revision$
$Date$

This Ant script provides the bootstrap capability to install Gant for the first time for those people
installing from a Subversion checkout.

-->

<project name="Gant Boostrap Installer" default="test" basedir=".">

  <property name="version" value="0.2.1-SNAPSHOT"/>

  <property environment="environment"/>

  <property name="sourceDirectory" value="source"/>
  <property name="testsDirectory" value="tests"/>
  <property name="groovyHome" value="${environment.GROOVY_HOME}"/>
  <property name="jarsDirectory" value="jarfiles"/>

  <property name="buildDirectory" value="build"/>
  <property name="buildClassesDirectory" value="${buildDirectory}/classes"/>
  <property name="buildTestsDirectory" value="${buildDirectory}/tests"/>
  <property name="buildLibDirectory" value="${buildDirectory}/lib"/>
  <property name="buildReportsDirectory" value="${buildDirectory}/reports"/>

  <path id="groovyJarSet">
    <fileset dir="${groovyHome}/lib" includes="*.jar"/>
  </path>

  <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovyJarSet"/>

  <target name="initialize" description="Initialize prior to a build.">
    <mkdir dir="${buildClassesDirectory}"/>
    <mkdir dir="${buildTestsDirectory}"/>
    <mkdir dir="${buildLibDirectory}"/>
    <mkdir dir="${buildReportsDirectory}"/>
  </target>

  <target name="compile" depends="initialize" description="Compile everything needed.">
    <javac srcdir="${sourceDirectory}" destdir="${buildClassesDirectory}" source="1.4" target="1.4" debug="on" classpathref="groovyJarSet"/>
    <groovyc srcdir="${sourceDirectory}" destdir="${buildClassesDirectory}" classpath="${buildClassesDirectory}" excludes="bin/*.groovy"/>
    <jar destfile="${buildLibDirectory}/gant-${version}.jar" basedir="${buildClassesDirectory}" includes="org/**"/>
  </target>

  <target name="compileTests" depends="compile" description="Compile all the tests.">
    <javac srcdir="${testsDirectory}" destdir="${buildTestsDirectory}" source="1.4" target="1.4" debug="on">
      <classpath>
        <path refid="groovyJarSet"/>
        <pathelement location="${buildClassesDirectory}"/>
      </classpath>
    </javac>
    <groovyc srcdir="${testsDirectory}" destdir="${buildTestsDirectory}">
      <classpath>
        <pathelement location="${buildClassesDirectory}"/>
        <pathelement location="${buildTestsDirectory}"/>
      </classpath>
    </groovyc>
  </target>

  <target name="test" depends="compileTests" description="Test a build.">
    <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpathref="groovyJarSet"/>
    <junit printsummary="yes">
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${buildReportsDirectory}">
        <fileset dir="${buildTestsDirectory}" includes="**/*_Test.class"/>
      </batchtest>
      <classpath>
        <pathelement location="${buildTestsDirectory}"/>
        <pathelement location="${buildClassesDirectory}"/>
        <path refid="groovyJarSet"/>
        <fileset dir="${jarsDirectory}" includes="ivy*.jar"/>
      </classpath>
    </junit>
  </target>

  <target name="install" depends="compile" description="Compile everything and then install to ${groovyHome}.">
    <copy todir="${groovyHome}">
      <fileset dir="${sourceDirectory}" includes="bin/gant*"/>
      <fileset dir="${buildDirectory}" includes="lib/gant*.jar"/>
    </copy>
    <copy todir="${groovyHome}/lib">
      <fileset dir="${jarsDirectory}" includes="ivy*.jar"/>
    </copy>
    <chmod perm="a+x">
      <fileset dir="${groovyHome}/bin" includes="gant*"/>
    </chmod>
  </target>

  <target name="clean" description="Clean everything up.">
    <delete dir="${buildDirectory}" quiet="true"/>
    <delete quiet="true">
      <fileset dir="." includes="**/*~" defaultexcludes="false"/>
    </delete>
  </target>

</project>
