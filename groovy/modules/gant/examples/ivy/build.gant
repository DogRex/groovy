/*
 *  There seems to be a bug in the lexical scoping of closures. So if we make things variables then we get
 *  failure.  If we put things in the binding everything works.
 */

/*final*/ buildDirectory = 'build'
/*final*/ sourceDirectory = 'source'
/*final*/ exampleDirectory = sourceDirectory + '/example' 

includeTargets << org.codehaus.groovy.gant.targets.Clean
cleanDirectory << buildDirectory
cleanPattern <<  '**/*~'

 //  Cannot have a target called run as it creates an infinite mutual recursion. :-(

task ( runX : 'Run the Ivy "Hello" test.' ) {
  def classPathRef = 'classpath'
  Ant.mkdir ( dir : buildDirectory )
  Ant.path ( id : classPathRef )
  includeTool << org.codehaus.groovy.gant.tools.Ivy
  Ivy.cachepath ( organisation : 'apache' , module : 'commons-lang' , revision : '2.1' ,  pathid : classPathRef , inline : 'true' )
  Ant.javac ( srcdir : sourceDirectory , destdir : buildDirectory , debug : 'true' , classpathref : classPathRef )
  Ant.java ( classname : 'example.Hello' , classpathref : classPathRef ) {
    classpath { pathelement ( location : buildDirectory ) }
  }
}

task ( cleanCache : 'Clean the Ivy cache.' ) { Ant.delete ( dir : System.getenv ( ).HOME + '/.ivy/cache' ) }

task ( 'default' : 'The default task in run.' ) { runX ( ) }
